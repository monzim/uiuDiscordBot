name: 🐳 Docker Build and Push

on:
  push:
    branches: ["live"]

  pull_request:
    types: [closed]
    branches: ["live"]

env:
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  WEBHOOK_ID: ${{ secrets.WEBHOOK_ID }}
  WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}
  COSMOS_ENDPOINT: ${{ secrets.COSMOS_ENDPOINT }}
  COSMOS_KEY: ${{ secrets.COSMOS_KEY }}
  COSMOS_DATABASE_ID: ${{ secrets.COSMOS_DATABASE_ID }}
  COSMOS_CONTAINER_ID: ${{ secrets.COSMOS_CONTAINER_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/live')

    steps:
      - name: 📥 Checkout Repo
        uses: actions/checkout@v3

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "19.5.0"

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🏗️ Build and push
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/uiudiscordbot:latest -f docker/Dockerfile . --push

      # - name: 🏗️ Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./docker/Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/uiudiscordbot:latest
      #     platforms: linux/amd64,linux/arm64
